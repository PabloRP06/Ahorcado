# Memoria T√©cnica: Cl√°sico del Ahorcado (Web)

## üéØ Objetivo del Proyecto

El principal objetivo de este proyecto fue crear una implementaci√≥n cl√°sica del juego "El Ahorcado" (Hangman) utilizando √∫nicamente tecnolog√≠as front-end (HTML, CSS y JavaScript). El enfoque principal estuvo en el desarrollo de la l√≥gica de juego y en la manipulaci√≥n din√°mica del DOM y las clases CSS para representar el progreso visual del ahorcado.

## üõ†Ô∏è Stack Tecnol√≥gico

| Tecnolog√≠a | Rol | Uso Espec√≠fico |
| :--- | :--- | :--- |
| **HTML5** | Estructura | Definici√≥n del tablero de juego, el √°rea de la palabra, el teclado de botones, y los elementos (divs) que componen el dibujo del ahorcado. |
| **CSS3** | Presentaci√≥n y Dibujo | Estilos de la interfaz. **L√≥gica de Visibilidad:** Uso de selectores CSS anidados (ej. `.fallo-3 #man-head`) para lograr la progresi√≥n y acumulaci√≥n visual de las partes del mu√±eco con cada fallo. |
| **JavaScript (Vanilla JS)** | L√≥gica Central | Gesti√≥n de palabras aleatorias, procesamiento de intentos, actualizaci√≥n de la palabra adivinada, y manejo del contador de fallos. |

## üß† L√≥gica de Juego y Progresi√≥n

### 1. Gesti√≥n de Palabras
* Una lista (`WORDS`) contiene todas las posibles palabras secretas (en may√∫sculas).
* Al iniciar, se elige una palabra aleatoria (`secretWord`).
* La palabra se representa en pantalla como un array de guiones bajos (`guessedWord`).

### 2. Detecci√≥n de Aciertos/Fallos
* La funci√≥n `handleGuess(letter, button)` es el n√∫cleo. Deshabilita el bot√≥n de la letra utilizada.
* Si el intento es correcto, actualiza `guessedWord` y marca el bot√≥n como acierto (clase `correct`).
* Si el intento es incorrecto, a√±ade la letra a `wrongGuesses`, decrementa `remainingFalls`, y marca el bot√≥n como fallo (clase `wrong`).

### 3. Progresi√≥n del Dibujo (CSS Acumulativo)
La clave del juego es la progresi√≥n visual. Se utiliza un m√©todo acumulativo en CSS:

* JavaScript a√±ade una clase de estado al contenedor principal (ej. `hangman-display fallo-3`).
* El CSS utiliza selectores para mostrar **todas las partes hasta ese fallo**. Por ejemplo, el selector para el fallo 3 muestra la cabeza, el cuerpo y el primer brazo simult√°neamente.

```css
/* Ejemplo de selector acumulativo en CSS */
.fallo-3 #man-head, .fallo-3 #man-body, .fallo-3 #man-arm-l {
    display: block;
}
